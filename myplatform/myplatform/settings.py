"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 1.8.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
from google.oauth2 import service_account
# from pathlib import Path
import mimetypes

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# ROOT_DIR = Path(__file__).resolve(strict=True).parent.parent.parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$!r)@8^pv#=wd7ksxso22sc#+=jc*e2ssyqihnh64+*lor_+-d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

INSTALLED_APPS = (
    'suit', # 비번 초기화 Form cumstomizing
    'channels',
    'chat',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    'rest_framework',
    'rest_framework.authtoken',
    'rest_auth',
    'rest_auth.registration',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.kakao',
    'allauth.socialaccount.providers.naver',
    'allauth.socialaccount.providers.google',

    'corsheaders',
    # APP NAME
    'backend',
    'user_profile',
    'company_profile',
    'hr_profile',
    'employee',
    'sms',
    'sendmail',

    'storages',
    'elastic_search',
    'debug_toolbar',
    'django_filters',
    'rest_framework_filters',

    'django_mysql',

    'drf_yasg',

    'gmailapi_backend',
    'invitations',

)

MIDDLEWARE = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    # 'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
)


ROOT_URLCONF = 'myplatform.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'frontend', 'build'),
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myplatform.wsgi.application'

# Static files (CSS, JavaScript, Images)
STATIC_ROOT = 'static'
STATIC_URL = '/static/'
# GS_STATIC_BUCKET_NAME = 'chaema'
# STATIC_URL = 'https://storage.googleapis.com/{}/static/'.format(GS_STATIC_BUCKET_NAME)


# Google Cloud Storage
DEFAULT_FILE_STORAGE = 'backend.gcloud.GoogleCloudMediaFileStorage'
# STATICFILES_STORAGE = 'backend.gcloud.GoogleCloudStaticFileStorage'

GS_CREDENTIALS = service_account.Credentials.from_service_account_file(
    # "chaema-320000-3f018a118e20.json"
    "chaema-321802-e5f91de75b42.json"
)

GS_PROJECT_ID = 'chaema'

# GS_MEDIA_BUCKET_NAME = 'chaema-320000'
GS_MEDIA_BUCKET_NAME = 'chaema-321802.appspot.com'
# Google Cloud Storage
MEDIA_URL = 'https://storage.googleapis.com/{}/'.format(GS_MEDIA_BUCKET_NAME)
MEDIA_ROOT = "media/"

UPLOAD_ROOT = 'media/uploads/'

DOWNLOAD_ROOT = os.path.join(BASE_DIR, "media/downloads")
DOWNLOAD_URL = "media/downloads"

mimetypes.add_type("text/css", ".css", True)

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'frontend', 'build', 'static'),
)

# DataBase
import pymysql  # noqa: 402
pymysql.version_info = (1, 3, 13, "final", 0)
pymysql.install_as_MySQLdb()

# if os.getenv('GAE_APPLICATION', None):
if os.getenv('GAE_INSTANCE', None):
    print('GAE_INSTANCE!')
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            # 'HOST': '/cloudsql/chaema-320000:asia-northeast3:chaema',
            'HOST': '/cloudsql/chaema-321802:asia-northeast3:chaema',
            'USER': 'root',
            'PASSWORD': 'coak123$',
            'NAME': 'chaema',
        },
    }
    DEBUG = False
    URL_FRONT = 'https://chaema.co.kr/'

else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            # 'HOST': '116.125.119.111', # 테스트DB
            # 'HOST': '34.64.231.68',
            'HOST': '34.64.101.58',
            'PORT': '3306',
            'NAME': 'chaema',
            'USER': 'root',
            'PASSWORD': 'coak123$',
            'OPTIONS': {
                'charset': 'utf8mb4',
            },
            'TEST': {
                'NAME': 'test_chaema'
            }
        },
    }
    DEBUG = True
    URL_FRONT = 'http://localhost:8000/'


LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True
USE_L10N = False
USE_TZ = True
# JQUERY_URL = True

SITE_ID = 2

## User Authentication Settings
ACCOUNT_CONFIRM_EMAIL_ON_GET = True
ACCOUNT_ADAPTER = 'backend.adapter.InvitationsCustomAdapter'
SOCIALACCOUNT_ADAPTER = 'backend.adapter.SocialAccountRegisterAdapter'


# Following is added to enable registration with email instead of username
AUTHENTICATION_BACKENDS = (
 "django.contrib.auth.backends.ModelBackend",
 "allauth.account.auth_backends.AuthenticationBackend",
)

REST_AUTH_SERIALIZERS = {
    'USER_DETAILS_SERIALIZER': 'backend.serializers.UserSerializer',
    'PASSWORD_RESET_SERIALIZER': 'backend.serializers.PasswordResetSerializer'
}

REST_AUTH_REGISTER_SERIALIZERS = {
    'REGISTER_SERIALIZER': 'backend.serializers.RegisterSerializer',
}

AUTH_USER_MODEL = 'backend.User'

# TOKEN_EXPIRED_AFTER_SECONDS = 60

REST_SESSION_LOGIN = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = 'optional'
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 14
LOGOUT_ON_PASSWORD_CHANGE = False
# user -> custom user
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_USERNAME_REQUIRED = False

SOCIALACCOUNT_EMAIL_REQUIRED = True
# SOCIALACCOUNT_ADAPTER = 'backend.adapter.KaKaoAccountAdapter'
SOCIALACCOUNT_EMAIL_VERIFICATION = 'none'
SOCIALACCOUNT_AUTO_SIGNUP = True
SOCIALACCOUNT_PROVIDERS = {
    'facebook': {
        'SCOPE': ['email'],
        'METHOD': 'oauth2'
    }
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_THROTTLE_CLASSES': (
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ),
    'DEFAULT_THROTTLE_RATES': {
        'anon': '1000/day',
        'user': '1000/day'
    },
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'DEFAULT_PAGINATION_CLASS': 'backend.pagination.CustomPageNumberPagination',
    'PAGE_SIZE': 10,
    # 'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_FILTER_BACKENDS': ['rest_framework_filters.backends.RestFrameworkFilterBackend'],
    'DEFAULT_PERMISSION_CLASSES': (
        # 'rest_framework.permissions.IsAuthenticated',
    ),
}



# Change CORS settings as needed
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_WHITELIST = (
    'http://localhost:3000',
    'http://localhost:8000',
)

CORS_ORIGIN_REGEX_WHITELIST = (
    r'^(https://)?storage.googleapis.com/',
    r'^(http?://)?chaegong.co.kr',
    r'^(https?://)?chaegong.co.kr',
    r'^(http?://)?chaema.co.kr',
    r'^(https?://)?chaema.co.kr',
    r'^(http?://)?openapi.naver.com',
    r'^(https?://)?openapi.naver.com',
)

# Email Settings
EMAIL_FILE_PATH = 'tmp/emails'

# Debug_toolbar
INTERNAL_IPS = [
    '127.0.0.1',
]

redis_host = os.environ.get('REDISHOST', '127.0.0.1')
redis_port = int(os.environ.get('REDISPORT', 6379))

ASGI_APPLICATION = "myplatform.asgi.application"
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [(redis_host, redis_port)]
            # "hosts": [('116.125.119.111', 6379)]
        }
    },
}

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'api_key': {
            'type': 'apiKey',
            'in': 'header',
            'name': 'Authorization'
        }
    },
}

EMAIL_BACKEND = 'gmailapi_backend.mail.GmailBackend'
ACCOUNT_EMAIL_SUBJECT_PREFIX = "[채용마켓]"
INVITATIONS_EMAIL_SUBJECT_PREFIX = "[채용마켓]"

# GMAIL_API_CLIENT_ID = '10475011806-tq33ukclt26cfq6q8uucdq97017halvh.apps.googleusercontent.com'
GMAIL_API_CLIENT_ID = '569777318005-1lcr8lk07po7j73qi8drgibpvhgjijf3.apps.googleusercontent.com'
# GMAIL_API_CLIENT_SECRET = 'PaVYkgde7NzLnHcF-3hutiFd'
GMAIL_API_CLIENT_SECRET = '_SSV19CBtSFLR7d8FbpHTw29'
# GMAIL_API_REFRESH_TOKEN = '1//04MqkcLRKHjJTCgYIARAAGAQSNwF-L9IraldXSS_otz773PFjHR9kjKEr-rfia8rVdcyHh8r3J_MS8SniAvkLpu4ndXxEVrb9pTE'
GMAIL_API_REFRESH_TOKEN = '1//04umg0_buXVJGCgYIARAAGAQSNwF-L9IrjpeNlejs-kAYwdORttikjyyMBbltIPYos4U_JT4Qew4vIKXf4Yk9zOyooQzkFb8-lhU'
